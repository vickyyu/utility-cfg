set -g default-terminal "xterm-256color"
set-window-option -g mode-keys vi
set-window-option -g status-keys vi
#set-window-option -g mode-keys emacs
#set-window-option -g status-keys emacs
set-window-option -g window-status-current-bg blue
set-window-option -g automatic-rename on
set-option -g history-limit 100000
set-option -g base-index 1
set-option -s escape-time 0
setw -g mode-mouse off
# set-option -g mouse-select-pane on

# Make C-Left/C-Right work as jumping word
set-window-option -g xterm-keys on

# We won't worry about sending C-] to any programs
# C-b is not acceptable, due to emacs, bash, and vim
unbind-key C-b
set-option -g prefix C-]

# send the prefix to client inside window
bind-key -n C-\ send-prefix

# hit C-] twice to go to last window
bind-key C-] last-window
bind-key b set-option status

# open a man page in new window
bind-key / command-prompt "split-window 'exec man %%'"

# vim's definition of a horizontal/vertical split is reversed from tmux's
bind _ split-window -v
bind | split-window -h

# ctrl+left/right cycles thru windows
# unbind-key default resize-pane
unbind-key -n C-Right
unbind-key -n C-Left
bind-key -r C-Right next
bind-key -r C-Left prev

# ctrl+up/down cycles thru sessions
# unbind-key default resize-pane
unbind-key -n C-Up
unbind-key -n C-Down
bind-key -r C-Up switch-client -p
bind-key -r C-Down switch-client -n

# # move around panes with hjkl, as one would in vim after pressing ctrl-w
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# resize panes like vim
# bind -r < resize-pane -L 10
# bind -r > resize-pane -R 10
# bind -r - resize-pane -D 10
# bind -r + resize-pane -U 10

# Keys
bind k confirm kill-window
bind K confirm kill-server
bind . command-prompt
bind r source-file ~/.tmux.conf

bind C-e command-prompt -p "session?,message?" "run-shell \"tmux list-windows -t %1 \| cut -d: -f1\|xargs -I\{\} tmux send-keys -t %1:\{\} %2\""

# Log pane to file
# See @ http://unix.stackexchange.com/questions/5832/is-there-an-equivalent-of-gnu-screens-log-command-in-tmux
bind-key H pipe-pane -o 'exec bash -c "while IFS= read -r line; do echo \"\$(date +%%Y%%m%%dT%%H%%M%%S): \$line\"; done" >> /tmp/"#W-tmux.log"'
bind-key h pipe-pane \; display-message 'Ended logging to /tmp/#W-tmux.log'
